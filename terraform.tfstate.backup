{
    "version": 3,
    "terraform_version": "0.11.8",
    "serial": 36,
    "lineage": "4f472cef-cde2-3846-932b-9af396525f9f",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {
                "bastion_public_dns": {
                    "sensitive": false,
                    "type": "string",
                    "value": "ec2-13-126-52-25.ap-south-1.compute.amazonaws.com"
                },
                "bastion_public_ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": "13.126.52.25"
                },
                "k8s_endpoint": {
                    "sensitive": false,
                    "type": "string",
                    "value": "https://52.66.203.164.xip.io:8443"
                },
                "master_public_dns": {
                    "sensitive": false,
                    "type": "string",
                    "value": "ec2-52-66-203-164.ap-south-1.compute.amazonaws.com"
                },
                "master_public_ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": "52.66.203.164"
                },
                "master_url": {
                    "sensitive": false,
                    "type": "string",
                    "value": "https://52.66.203.164.xip.io:8443"
                }
            },
            "resources": {
                "null_resource.post-install-master": {
                    "type": "null_resource",
                    "depends_on": [
                        "module.openshift"
                    ],
                    "primary": {
                        "id": "1735719043976437741",
                        "attributes": {
                            "id": "1735719043976437741"
                        },
                        "meta": {},
                        "tainted": true
                    },
                    "deposed": [],
                    "provider": "provider.null"
                },
                "null_resource.post-install-node1": {
                    "type": "null_resource",
                    "depends_on": [
                        "module.openshift"
                    ],
                    "primary": {
                        "id": "4220567071420203226",
                        "attributes": {
                            "id": "4220567071420203226"
                        },
                        "meta": {},
                        "tainted": true
                    },
                    "deposed": [],
                    "provider": "provider.null"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "openshift"
            ],
            "outputs": {
                "bastion_private_dns": {
                    "sensitive": false,
                    "type": "string",
                    "value": "ip-10-0-1-212.ap-south-1.compute.internal"
                },
                "bastion_private_ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": "10.0.1.212"
                },
                "bastion_public_dns": {
                    "sensitive": false,
                    "type": "string",
                    "value": "ec2-13-126-52-25.ap-south-1.compute.amazonaws.com"
                },
                "bastion_public_ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": "13.126.52.25"
                },
                "master_private_dns": {
                    "sensitive": false,
                    "type": "string",
                    "value": "ip-10-0-1-77.ap-south-1.compute.internal"
                },
                "master_private_ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": "10.0.1.77"
                },
                "master_public_dns": {
                    "sensitive": false,
                    "type": "string",
                    "value": "ec2-52-66-203-164.ap-south-1.compute.amazonaws.com"
                },
                "master_public_ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": "52.66.203.164"
                },
                "node1_private_dns": {
                    "sensitive": false,
                    "type": "string",
                    "value": "ip-10-0-1-119.ap-south-1.compute.internal"
                },
                "node1_private_ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": "10.0.1.119"
                },
                "node1_public_dns": {
                    "sensitive": false,
                    "type": "string",
                    "value": "ec2-13-127-195-115.ap-south-1.compute.amazonaws.com"
                },
                "node1_public_ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": "13.127.195.115"
                }
            },
            "resources": {
                "aws_iam_instance_profile.openshift-instance-profile": {
                    "type": "aws_iam_instance_profile",
                    "depends_on": [
                        "aws_iam_role.openshift-instance-role"
                    ],
                    "primary": {
                        "id": "openshift-instance-profile",
                        "attributes": {
                            "arn": "arn:aws:iam::917449264944:instance-profile/openshift-instance-profile",
                            "create_date": "2018-10-23T14:36:27Z",
                            "id": "openshift-instance-profile",
                            "name": "openshift-instance-profile",
                            "path": "/",
                            "role": "openshift-instance-role",
                            "roles.#": "0",
                            "unique_id": "AIPAI72INOCVGAPKYVMDO"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.openshift.provider.aws"
                },
                "aws_iam_policy.openshift-policy-forward-logs": {
                    "type": "aws_iam_policy",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:iam::917449264944:policy/openshift-instance-forward-logs",
                        "attributes": {
                            "arn": "arn:aws:iam::917449264944:policy/openshift-instance-forward-logs",
                            "description": "Allows an instance to forward logs to CloudWatch",
                            "id": "arn:aws:iam::917449264944:policy/openshift-instance-forward-logs",
                            "name": "openshift-instance-forward-logs",
                            "path": "/",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\",\n        \"logs:DescribeLogStreams\"\n    ],\n      \"Resource\": [\n        \"arn:aws:logs:*:*:*\"\n    ]\n  }\n ]\n}\n"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.openshift.provider.aws"
                },
                "aws_iam_policy_attachment.openshift-attachment-forward-logs": {
                    "type": "aws_iam_policy_attachment",
                    "depends_on": [
                        "aws_iam_policy.openshift-policy-forward-logs",
                        "aws_iam_role.openshift-instance-role"
                    ],
                    "primary": {
                        "id": "openshift-attachment-forward-logs",
                        "attributes": {
                            "groups.#": "0",
                            "id": "openshift-attachment-forward-logs",
                            "name": "openshift-attachment-forward-logs",
                            "policy_arn": "arn:aws:iam::917449264944:policy/openshift-instance-forward-logs",
                            "roles.#": "1",
                            "roles.1717939172": "openshift-instance-role",
                            "users.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.openshift.provider.aws"
                },
                "aws_iam_role.openshift-instance-role": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "openshift-instance-role",
                        "attributes": {
                            "arn": "arn:aws:iam::917449264944:role/openshift-instance-role",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2018-10-23T14:36:24Z",
                            "description": "",
                            "force_detach_policies": "false",
                            "id": "openshift-instance-role",
                            "max_session_duration": "3600",
                            "name": "openshift-instance-role",
                            "path": "/",
                            "unique_id": "AROAJ6S6BZI66E2ZQTCL6"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.openshift.provider.aws"
                },
                "aws_instance.bastion": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_security_group.openshift-public-egress",
                        "aws_security_group.openshift-ssh",
                        "aws_security_group.openshift-vpc",
                        "aws_subnet.public-subnet",
                        "data.aws_ami.centos",
                        "local_file.inventory"
                    ],
                    "primary": {
                        "id": "i-0efb2e5bd81ff1172",
                        "attributes": {
                            "ami": "ami-1780a878",
                            "arn": "arn:aws:ec2:ap-south-1:917449264944:instance/i-0efb2e5bd81ff1172",
                            "associate_public_ip_address": "true",
                            "availability_zone": "ap-south-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "",
                            "id": "i-0efb2e5bd81ff1172",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "openshift",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-0a0915e58c619bba9",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-0a0915e58c619bba9",
                            "private_dns": "ip-10-0-1-212.ap-south-1.compute.internal",
                            "private_ip": "10.0.1.212",
                            "public_dns": "ec2-13-126-52-25.ap-south-1.compute.amazonaws.com",
                            "public_ip": "13.126.52.25",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "false",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-029520faf5d335d28",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-0028f9d52ee5ae87f",
                            "tags.%": "4",
                            "tags.Name": "OpenShift Bastion",
                            "tags.Project": "openshift",
                            "tags.TTL": "-1",
                            "tags.owner": "",
                            "tenancy": "default",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "3",
                            "vpc_security_group_ids.2489695751": "sg-035ca803553e371ad",
                            "vpc_security_group_ids.3029972439": "sg-08cb3e6620008e5b3",
                            "vpc_security_group_ids.3873221338": "sg-0280f5b6486fc3754"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.openshift.provider.aws"
                },
                "aws_instance.master": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.openshift-instance-profile",
                        "aws_security_group.openshift-public-egress",
                        "aws_security_group.openshift-public-ingress",
                        "aws_security_group.openshift-vpc",
                        "aws_subnet.public-subnet",
                        "data.aws_ami.centos",
                        "data.template_file.setup-master"
                    ],
                    "primary": {
                        "id": "i-07dfadb403f7330bc",
                        "attributes": {
                            "ami": "ami-1780a878",
                            "arn": "arn:aws:ec2:ap-south-1:917449264944:instance/i-07dfadb403f7330bc",
                            "associate_public_ip_address": "true",
                            "availability_zone": "ap-south-1a",
                            "cpu_core_count": "2",
                            "cpu_threads_per_core": "2",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "1",
                            "ebs_block_device.2659407853.delete_on_termination": "true",
                            "ebs_block_device.2659407853.device_name": "/dev/sdf",
                            "ebs_block_device.2659407853.encrypted": "false",
                            "ebs_block_device.2659407853.iops": "0",
                            "ebs_block_device.2659407853.snapshot_id": "",
                            "ebs_block_device.2659407853.volume_id": "vol-03929d96b521274f3",
                            "ebs_block_device.2659407853.volume_size": "80",
                            "ebs_block_device.2659407853.volume_type": "standard",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "openshift-instance-profile",
                            "id": "i-07dfadb403f7330bc",
                            "instance_state": "running",
                            "instance_type": "m4.xlarge",
                            "ipv6_addresses.#": "0",
                            "key_name": "openshift",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-0fdf4f13b95930d26",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-0fdf4f13b95930d26",
                            "private_dns": "ip-10-0-1-77.ap-south-1.compute.internal",
                            "private_ip": "10.0.1.77",
                            "public_dns": "ec2-52-66-203-164.ap-south-1.compute.amazonaws.com",
                            "public_ip": "52.66.203.164",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "0",
                            "root_block_device.0.volume_id": "vol-0439bf8189cc748ee",
                            "root_block_device.0.volume_size": "50",
                            "root_block_device.0.volume_type": "standard",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-0028f9d52ee5ae87f",
                            "tags.%": "4",
                            "tags.Name": "OpenShift Master",
                            "tags.Project": "openshift",
                            "tags.TTL": "-1",
                            "tags.owner": "",
                            "tenancy": "default",
                            "user_data": "4b06bdc969476c405cce6a02185ee9af038dde96",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "3",
                            "vpc_security_group_ids.2489695751": "sg-035ca803553e371ad",
                            "vpc_security_group_ids.2688570490": "sg-01b4d3863e7ada179",
                            "vpc_security_group_ids.3873221338": "sg-0280f5b6486fc3754"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.openshift.provider.aws"
                },
                "aws_instance.node1": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.openshift-instance-profile",
                        "aws_security_group.openshift-public-egress",
                        "aws_security_group.openshift-public-ingress",
                        "aws_security_group.openshift-vpc",
                        "aws_subnet.public-subnet",
                        "data.aws_ami.centos",
                        "data.template_file.setup-node"
                    ],
                    "primary": {
                        "id": "i-05fe2ebbd47e47d72",
                        "attributes": {
                            "ami": "ami-1780a878",
                            "arn": "arn:aws:ec2:ap-south-1:917449264944:instance/i-05fe2ebbd47e47d72",
                            "associate_public_ip_address": "true",
                            "availability_zone": "ap-south-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "2",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "1",
                            "ebs_block_device.2659407853.delete_on_termination": "true",
                            "ebs_block_device.2659407853.device_name": "/dev/sdf",
                            "ebs_block_device.2659407853.encrypted": "false",
                            "ebs_block_device.2659407853.iops": "0",
                            "ebs_block_device.2659407853.snapshot_id": "",
                            "ebs_block_device.2659407853.volume_id": "vol-04b5f51660126452b",
                            "ebs_block_device.2659407853.volume_size": "80",
                            "ebs_block_device.2659407853.volume_type": "standard",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "openshift-instance-profile",
                            "id": "i-05fe2ebbd47e47d72",
                            "instance_state": "running",
                            "instance_type": "m4.large",
                            "ipv6_addresses.#": "0",
                            "key_name": "openshift",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-07c9161a3058a0e12",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-07c9161a3058a0e12",
                            "private_dns": "ip-10-0-1-119.ap-south-1.compute.internal",
                            "private_ip": "10.0.1.119",
                            "public_dns": "ec2-13-127-195-115.ap-south-1.compute.amazonaws.com",
                            "public_ip": "13.127.195.115",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "0",
                            "root_block_device.0.volume_id": "vol-0ea1cacbe091415ae",
                            "root_block_device.0.volume_size": "50",
                            "root_block_device.0.volume_type": "standard",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-0028f9d52ee5ae87f",
                            "tags.%": "4",
                            "tags.Name": "OpenShift Node 1",
                            "tags.Project": "openshift",
                            "tags.TTL": "-1",
                            "tags.owner": "",
                            "tenancy": "default",
                            "user_data": "1500310d50866faa881e152e759327c6b53d1b60",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "3",
                            "vpc_security_group_ids.2489695751": "sg-035ca803553e371ad",
                            "vpc_security_group_ids.2688570490": "sg-01b4d3863e7ada179",
                            "vpc_security_group_ids.3873221338": "sg-0280f5b6486fc3754"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.openshift.provider.aws"
                },
                "aws_internet_gateway.openshift": {
                    "type": "aws_internet_gateway",
                    "depends_on": [
                        "aws_vpc.openshift"
                    ],
                    "primary": {
                        "id": "igw-08597891f45300125",
                        "attributes": {
                            "id": "igw-08597891f45300125",
                            "tags.%": "2",
                            "tags.Name": "OpenShift IGW",
                            "tags.Project": "openshift",
                            "vpc_id": "vpc-012f388c55eebc89e"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.openshift.provider.aws"
                },
                "aws_key_pair.openshift": {
                    "type": "aws_key_pair",
                    "depends_on": [],
                    "primary": {
                        "id": "openshift",
                        "attributes": {
                            "fingerprint": "01:1b:92:3d:2d:a9:45:2c:9a:f8:6a:0f:08:b4:dd:e2",
                            "id": "openshift",
                            "key_name": "openshift",
                            "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSy1exaHf3hAlXku9ggZWWQ8cvmwGpXiYrL30XUHOUeF7Kv1OBykiAV3T8dPbV+wH5VTEcsnmBH7eLwA4gEMaHRyj1925PDy8ffySM82D1WUwbNvyoTZSxHEvRLzAfRDH/ud9xyYyeG5axA+QUs/rxMgrSCd/DT4dsbWNekYhY/nqshpPjDOmReiM7sTzrHv8QD8XuthAaICONDl6dG6gv12GWrBaga5KoMrq7WUVRrJpzigI+K/4Venfi0XsC8OzW32DIqCmkLycZS+PrwSxZDicnUU4anC0SywCB2qEIWMo6Hn+LId2uOAbB/eEQ3t8HqBwf85T8yuOB76PTkZVJ a602276@MC0A1CJC"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.openshift.provider.aws"
                },
                "aws_route53_record.master-a-record": {
                    "type": "aws_route53_record",
                    "depends_on": [
                        "aws_instance.master",
                        "aws_route53_zone.internal"
                    ],
                    "primary": {
                        "id": "Z2ZQCJ8B5F1SUD_master.openshift.local_A",
                        "attributes": {
                            "allow_overwrite": "true",
                            "fqdn": "master.openshift.local",
                            "id": "Z2ZQCJ8B5F1SUD_master.openshift.local_A",
                            "name": "master.openshift.local",
                            "records.#": "1",
                            "records.3984176734": "10.0.1.77",
                            "ttl": "300",
                            "type": "A",
                            "zone_id": "Z2ZQCJ8B5F1SUD"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.openshift.provider.aws"
                },
                "aws_route53_record.node1-a-record": {
                    "type": "aws_route53_record",
                    "depends_on": [
                        "aws_instance.node1",
                        "aws_route53_zone.internal"
                    ],
                    "primary": {
                        "id": "Z2ZQCJ8B5F1SUD_node1.openshift.local_A",
                        "attributes": {
                            "allow_overwrite": "true",
                            "fqdn": "node1.openshift.local",
                            "id": "Z2ZQCJ8B5F1SUD_node1.openshift.local_A",
                            "name": "node1.openshift.local",
                            "records.#": "1",
                            "records.1408154100": "10.0.1.119",
                            "ttl": "300",
                            "type": "A",
                            "zone_id": "Z2ZQCJ8B5F1SUD"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.openshift.provider.aws"
                },
                "aws_route53_zone.internal": {
                    "type": "aws_route53_zone",
                    "depends_on": [
                        "aws_vpc.openshift"
                    ],
                    "primary": {
                        "id": "Z2ZQCJ8B5F1SUD",
                        "attributes": {
                            "comment": "OpenShift Cluster Internal DNS",
                            "force_destroy": "false",
                            "id": "Z2ZQCJ8B5F1SUD",
                            "name": "openshift.local",
                            "name_servers.#": "4",
                            "name_servers.0": "ns-0.awsdns-00.com.",
                            "name_servers.1": "ns-1024.awsdns-00.org.",
                            "name_servers.2": "ns-1536.awsdns-00.co.uk.",
                            "name_servers.3": "ns-512.awsdns-00.net.",
                            "tags.%": "2",
                            "tags.Name": "OpenShift Internal DNS",
                            "tags.Project": "openshift",
                            "vpc_id": "vpc-012f388c55eebc89e",
                            "vpc_region": "ap-south-1",
                            "zone_id": "Z2ZQCJ8B5F1SUD"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.openshift.provider.aws"
                },
                "aws_route_table.public": {
                    "type": "aws_route_table",
                    "depends_on": [
                        "aws_internet_gateway.openshift",
                        "aws_vpc.openshift"
                    ],
                    "primary": {
                        "id": "rtb-0b0a37856eb064596",
                        "attributes": {
                            "id": "rtb-0b0a37856eb064596",
                            "propagating_vgws.#": "0",
                            "route.#": "1",
                            "route.4271076306.cidr_block": "0.0.0.0/0",
                            "route.4271076306.egress_only_gateway_id": "",
                            "route.4271076306.gateway_id": "igw-08597891f45300125",
                            "route.4271076306.instance_id": "",
                            "route.4271076306.ipv6_cidr_block": "",
                            "route.4271076306.nat_gateway_id": "",
                            "route.4271076306.network_interface_id": "",
                            "route.4271076306.vpc_peering_connection_id": "",
                            "tags.%": "2",
                            "tags.Name": "OpenShift Public Route Table",
                            "tags.Project": "openshift",
                            "vpc_id": "vpc-012f388c55eebc89e"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.openshift.provider.aws"
                },
                "aws_route_table_association.public-subnet": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.public",
                        "aws_subnet.public-subnet"
                    ],
                    "primary": {
                        "id": "rtbassoc-0225d56f18c863cad",
                        "attributes": {
                            "id": "rtbassoc-0225d56f18c863cad",
                            "route_table_id": "rtb-0b0a37856eb064596",
                            "subnet_id": "subnet-0028f9d52ee5ae87f"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.openshift.provider.aws"
                },
                "aws_security_group.openshift-public-egress": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "aws_vpc.openshift"
                    ],
                    "primary": {
                        "id": "sg-0280f5b6486fc3754",
                        "attributes": {
                            "arn": "arn:aws:ec2:ap-south-1:917449264944:security-group/sg-0280f5b6486fc3754",
                            "description": "Security group that allows egress to the internet for instances over HTTP and HTTPS.",
                            "egress.#": "3",
                            "egress.216457426.cidr_blocks.#": "1",
                            "egress.216457426.cidr_blocks.0": "0.0.0.0/0",
                            "egress.216457426.description": "",
                            "egress.216457426.from_port": "8200",
                            "egress.216457426.ipv6_cidr_blocks.#": "0",
                            "egress.216457426.prefix_list_ids.#": "0",
                            "egress.216457426.protocol": "tcp",
                            "egress.216457426.security_groups.#": "0",
                            "egress.216457426.self": "false",
                            "egress.216457426.to_port": "8200",
                            "egress.2214680975.cidr_blocks.#": "1",
                            "egress.2214680975.cidr_blocks.0": "0.0.0.0/0",
                            "egress.2214680975.description": "",
                            "egress.2214680975.from_port": "80",
                            "egress.2214680975.ipv6_cidr_blocks.#": "0",
                            "egress.2214680975.prefix_list_ids.#": "0",
                            "egress.2214680975.protocol": "tcp",
                            "egress.2214680975.security_groups.#": "0",
                            "egress.2214680975.self": "false",
                            "egress.2214680975.to_port": "80",
                            "egress.2617001939.cidr_blocks.#": "1",
                            "egress.2617001939.cidr_blocks.0": "0.0.0.0/0",
                            "egress.2617001939.description": "",
                            "egress.2617001939.from_port": "443",
                            "egress.2617001939.ipv6_cidr_blocks.#": "0",
                            "egress.2617001939.prefix_list_ids.#": "0",
                            "egress.2617001939.protocol": "tcp",
                            "egress.2617001939.security_groups.#": "0",
                            "egress.2617001939.self": "false",
                            "egress.2617001939.to_port": "443",
                            "id": "sg-0280f5b6486fc3754",
                            "ingress.#": "0",
                            "name": "openshift-public-egress",
                            "owner_id": "917449264944",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "2",
                            "tags.Name": "OpenShift Public Access",
                            "tags.Project": "openshift",
                            "vpc_id": "vpc-012f388c55eebc89e"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.openshift.provider.aws"
                },
                "aws_security_group.openshift-public-ingress": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "aws_vpc.openshift"
                    ],
                    "primary": {
                        "id": "sg-01b4d3863e7ada179",
                        "attributes": {
                            "arn": "arn:aws:ec2:ap-south-1:917449264944:security-group/sg-01b4d3863e7ada179",
                            "description": "Security group that allows public ingress to instances, HTTP, HTTPS and more.",
                            "egress.#": "0",
                            "id": "sg-01b4d3863e7ada179",
                            "ingress.#": "4",
                            "ingress.2214680975.cidr_blocks.#": "1",
                            "ingress.2214680975.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2214680975.description": "",
                            "ingress.2214680975.from_port": "80",
                            "ingress.2214680975.ipv6_cidr_blocks.#": "0",
                            "ingress.2214680975.prefix_list_ids.#": "0",
                            "ingress.2214680975.protocol": "tcp",
                            "ingress.2214680975.security_groups.#": "0",
                            "ingress.2214680975.self": "false",
                            "ingress.2214680975.to_port": "80",
                            "ingress.2617001939.cidr_blocks.#": "1",
                            "ingress.2617001939.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2617001939.description": "",
                            "ingress.2617001939.from_port": "443",
                            "ingress.2617001939.ipv6_cidr_blocks.#": "0",
                            "ingress.2617001939.prefix_list_ids.#": "0",
                            "ingress.2617001939.protocol": "tcp",
                            "ingress.2617001939.security_groups.#": "0",
                            "ingress.2617001939.self": "false",
                            "ingress.2617001939.to_port": "443",
                            "ingress.2715662207.cidr_blocks.#": "1",
                            "ingress.2715662207.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2715662207.description": "",
                            "ingress.2715662207.from_port": "8443",
                            "ingress.2715662207.ipv6_cidr_blocks.#": "0",
                            "ingress.2715662207.prefix_list_ids.#": "0",
                            "ingress.2715662207.protocol": "tcp",
                            "ingress.2715662207.security_groups.#": "0",
                            "ingress.2715662207.self": "false",
                            "ingress.2715662207.to_port": "8443",
                            "ingress.516175195.cidr_blocks.#": "1",
                            "ingress.516175195.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.516175195.description": "",
                            "ingress.516175195.from_port": "8080",
                            "ingress.516175195.ipv6_cidr_blocks.#": "0",
                            "ingress.516175195.prefix_list_ids.#": "0",
                            "ingress.516175195.protocol": "tcp",
                            "ingress.516175195.security_groups.#": "0",
                            "ingress.516175195.self": "false",
                            "ingress.516175195.to_port": "8080",
                            "name": "openshift-public-ingress",
                            "owner_id": "917449264944",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "2",
                            "tags.Name": "OpenShift Public Access",
                            "tags.Project": "openshift",
                            "vpc_id": "vpc-012f388c55eebc89e"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.openshift.provider.aws"
                },
                "aws_security_group.openshift-ssh": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "aws_vpc.openshift"
                    ],
                    "primary": {
                        "id": "sg-08cb3e6620008e5b3",
                        "attributes": {
                            "arn": "arn:aws:ec2:ap-south-1:917449264944:security-group/sg-08cb3e6620008e5b3",
                            "description": "Security group that allows public ingress over SSH.",
                            "egress.#": "0",
                            "id": "sg-08cb3e6620008e5b3",
                            "ingress.#": "1",
                            "ingress.2541437006.cidr_blocks.#": "1",
                            "ingress.2541437006.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2541437006.description": "",
                            "ingress.2541437006.from_port": "22",
                            "ingress.2541437006.ipv6_cidr_blocks.#": "0",
                            "ingress.2541437006.prefix_list_ids.#": "0",
                            "ingress.2541437006.protocol": "tcp",
                            "ingress.2541437006.security_groups.#": "0",
                            "ingress.2541437006.self": "false",
                            "ingress.2541437006.to_port": "22",
                            "name": "openshift-ssh",
                            "owner_id": "917449264944",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "2",
                            "tags.Name": "OpenShift SSH Access",
                            "tags.Project": "openshift",
                            "vpc_id": "vpc-012f388c55eebc89e"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.openshift.provider.aws"
                },
                "aws_security_group.openshift-vpc": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "aws_vpc.openshift"
                    ],
                    "primary": {
                        "id": "sg-035ca803553e371ad",
                        "attributes": {
                            "arn": "arn:aws:ec2:ap-south-1:917449264944:security-group/sg-035ca803553e371ad",
                            "description": "Default security group that allows all instances in the VPC to talk to each other over any port and protocol.",
                            "egress.#": "1",
                            "egress.753360330.cidr_blocks.#": "0",
                            "egress.753360330.description": "",
                            "egress.753360330.from_port": "0",
                            "egress.753360330.ipv6_cidr_blocks.#": "0",
                            "egress.753360330.prefix_list_ids.#": "0",
                            "egress.753360330.protocol": "-1",
                            "egress.753360330.security_groups.#": "0",
                            "egress.753360330.self": "true",
                            "egress.753360330.to_port": "0",
                            "id": "sg-035ca803553e371ad",
                            "ingress.#": "1",
                            "ingress.753360330.cidr_blocks.#": "0",
                            "ingress.753360330.description": "",
                            "ingress.753360330.from_port": "0",
                            "ingress.753360330.ipv6_cidr_blocks.#": "0",
                            "ingress.753360330.prefix_list_ids.#": "0",
                            "ingress.753360330.protocol": "-1",
                            "ingress.753360330.security_groups.#": "0",
                            "ingress.753360330.self": "true",
                            "ingress.753360330.to_port": "0",
                            "name": "openshift-vpc",
                            "owner_id": "917449264944",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "2",
                            "tags.Name": "OpenShift Internal VPC",
                            "tags.Project": "openshift",
                            "vpc_id": "vpc-012f388c55eebc89e"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.openshift.provider.aws"
                },
                "aws_subnet.public-subnet": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_internet_gateway.openshift",
                        "aws_vpc.openshift"
                    ],
                    "primary": {
                        "id": "subnet-0028f9d52ee5ae87f",
                        "attributes": {
                            "arn": "arn:aws:ec2:ap-south-1:917449264944:subnet/subnet-0028f9d52ee5ae87f",
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "ap-south-1a",
                            "cidr_block": "10.0.1.0/24",
                            "id": "subnet-0028f9d52ee5ae87f",
                            "map_public_ip_on_launch": "true",
                            "tags.%": "2",
                            "tags.Name": "OpenShift Public Subnet",
                            "tags.Project": "openshift",
                            "vpc_id": "vpc-012f388c55eebc89e"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.openshift.provider.aws"
                },
                "aws_vpc.openshift": {
                    "type": "aws_vpc",
                    "depends_on": [],
                    "primary": {
                        "id": "vpc-012f388c55eebc89e",
                        "attributes": {
                            "arn": "arn:aws:ec2:ap-south-1:917449264944:vpc/vpc-012f388c55eebc89e",
                            "assign_generated_ipv6_cidr_block": "false",
                            "cidr_block": "10.0.0.0/16",
                            "default_network_acl_id": "acl-0cb57b268f9be49d8",
                            "default_route_table_id": "rtb-08b10e46bec82c05e",
                            "default_security_group_id": "sg-0fb0bbca9f9beb847",
                            "dhcp_options_id": "dopt-971ba1ff",
                            "enable_dns_hostnames": "true",
                            "enable_dns_support": "true",
                            "id": "vpc-012f388c55eebc89e",
                            "instance_tenancy": "default",
                            "main_route_table_id": "rtb-08b10e46bec82c05e",
                            "tags.%": "2",
                            "tags.Name": "OpenShift VPC",
                            "tags.Project": "openshift"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.openshift.provider.aws"
                },
                "data.aws_ami.centos": {
                    "type": "aws_ami",
                    "depends_on": [],
                    "primary": {
                        "id": "ami-1780a878",
                        "attributes": {
                            "architecture": "x86_64",
                            "block_device_mappings.#": "1",
                            "block_device_mappings.1270490221.device_name": "/dev/sda1",
                            "block_device_mappings.1270490221.ebs.%": "6",
                            "block_device_mappings.1270490221.ebs.delete_on_termination": "false",
                            "block_device_mappings.1270490221.ebs.encrypted": "false",
                            "block_device_mappings.1270490221.ebs.iops": "0",
                            "block_device_mappings.1270490221.ebs.snapshot_id": "snap-01c7234a0095a3fc8",
                            "block_device_mappings.1270490221.ebs.volume_size": "8",
                            "block_device_mappings.1270490221.ebs.volume_type": "gp2",
                            "block_device_mappings.1270490221.no_device": "",
                            "block_device_mappings.1270490221.virtual_name": "",
                            "creation_date": "2018-06-13T15:58:26.000Z",
                            "description": "CentOS Linux 7 x86_64 HVM EBS ENA 1805_01",
                            "filter.#": "4",
                            "filter.1281954306.name": "root-device-type",
                            "filter.1281954306.values.#": "1",
                            "filter.1281954306.values.0": "ebs",
                            "filter.3159887878.name": "name",
                            "filter.3159887878.values.#": "1",
                            "filter.3159887878.values.0": "CentOS Linux 7 x86_64 HVM EBS *",
                            "filter.3386043752.name": "architecture",
                            "filter.3386043752.values.#": "1",
                            "filter.3386043752.values.0": "x86_64",
                            "filter.490168357.name": "virtualization-type",
                            "filter.490168357.values.#": "1",
                            "filter.490168357.values.0": "hvm",
                            "hypervisor": "xen",
                            "id": "ami-1780a878",
                            "image_id": "ami-1780a878",
                            "image_location": "aws-marketplace/CentOS Linux 7 x86_64 HVM EBS ENA 1805_01-b7ee8a69-ee97-4a49-9e68-afaee216db2e-ami-77ec9308.4",
                            "image_owner_alias": "aws-marketplace",
                            "image_type": "machine",
                            "most_recent": "true",
                            "name": "CentOS Linux 7 x86_64 HVM EBS ENA 1805_01-b7ee8a69-ee97-4a49-9e68-afaee216db2e-ami-77ec9308.4",
                            "owner_id": "679593333241",
                            "owners.#": "1",
                            "owners.0": "679593333241",
                            "product_codes.#": "1",
                            "product_codes.347650389.product_code_id": "aw0evgkw8e5c1q413zgy5pjce",
                            "product_codes.347650389.product_code_type": "marketplace",
                            "public": "true",
                            "root_device_name": "/dev/sda1",
                            "root_device_type": "ebs",
                            "root_snapshot_id": "snap-01c7234a0095a3fc8",
                            "sriov_net_support": "simple",
                            "state": "available",
                            "state_reason.%": "2",
                            "state_reason.code": "UNSET",
                            "state_reason.message": "UNSET",
                            "tags.%": "0",
                            "virtualization_type": "hvm"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.openshift.provider.aws"
                },
                "data.template_file.inventory": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_instance.master"
                    ],
                    "primary": {
                        "id": "504957667144820d4a028037e6f3dea69f316e5e4acbd4d0e8d948e68ce9b997",
                        "attributes": {
                            "id": "504957667144820d4a028037e6f3dea69f316e5e4acbd4d0e8d948e68ce9b997",
                            "rendered": "#!/usr/bin/env bash\r\n\r\nset -x\r\nexec \u003e /home/ec2-user/install-openshift.log 2\u003e\u00261\r\n\r\n# Install dev tools and Ansible 2.2\r\nsudo yum install -y \"@Development Tools\" python2-pip openssl-devel python-devel gcc libffi-devel\r\nsudo pip install -Iv ansible==2.4.3.0\r\n\r\n# Clone the openshift-ansible repo, which contains the installer.\r\ngit clone -b release-3.7 https://github.com/openshift/openshift-ansible\r\n\r\n# Set up bastion to SSH to other servers\r\necho \"./openshift\" \u003e /home/ec2-user/.ssh/private-key.pem\r\nchmod 400 /home/ec2-user/.ssh/private-key.pem\r\n#chown ec2-user:ec2-user /home/ec2-user/.ssh/private-key.pem\r\neval $(ssh-agent)\r\nssh-add /home/ec2-user/.ssh/private-key.pem\r\nssh-keyscan -t rsa -H master.openshift.local \u003e\u003e /home/ec2-user/.ssh/known_hosts\r\nssh-keyscan -t rsa -H node1.openshift.local \u003e\u003e /home/ec2-user/.ssh/known_hosts\r\n\r\n# Create inventory.cfg file\r\n#cat \u003e /home/inventory.cfg \u003c\u003c EOF\r\ncat \u003e /home/ec2-user/inventory.cfg \u003c\u003c EOF\r\n    # Waited: 60 seconds before generating from template\r\n    # Create an OSEv3 group that contains the masters and nodes groups\r\n    [OSEv3:children]\r\n    masters\r\n    nodes\r\n    etcd\r\n    # Set variables common for all OSEv3 hosts\r\n    [OSEv3:vars]\r\n    # Enable use of testing repos so that 3.7 will be used\r\n    #openshift_repos_enable_testing=true\r\n    # SSH user, this user should allow ssh based auth without requiring a password\r\n    ansible_ssh_user=ec2-user\r\n    # If ansible_ssh_user is not root, ansible_become must be set to true\r\n    ansible_become=true\r\n    # Deploy OpenShift origin.\r\n    openshift_deployment_type=origin\r\n    # OpenShift Release\r\n    openshift_release=v3.7\r\n    # We need a wildcard DNS setup for our public access to services, fortunately\r\n    # we can use the superb xip.io to get one for free.\r\n    # 52.66.203.164\r\n    openshift_public_hostname=52.66.203.164.xip.io\r\n    openshift_master_default_subdomain=52.66.203.164.xip.io\r\n    # Use an htpasswd file as the indentity provider.\r\n    openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]\r\n    # Uncomment the line below to enable metrics for the cluster.\r\n    # openshift_hosted_metrics_deploy=true\r\n    openshift_enable_service_catalog=false\r\n    template_service_broker_install=false\r\n    #openshift_template_service_broker_namespaces=['openshift']\r\n    #openshift_master_api_port=8443\r\n    #openshift_master_console_port=8443\r\n    # Create the masters host group. Be explicit with the openshift_hostname,\r\n    # otherwise it will resolve to something like ip-10-0-1-98.ec2.internal and use\r\n    # that as the node name.\r\n    [masters]\r\n    master.openshift.local openshift_hostname=master.openshift.local\r\n    # host group for etcd\r\n    [etcd]\r\n    master.openshift.local openshift_hostname=master.openshift.local\r\n    # host group for nodes, includes region info\r\n    [nodes]\r\n    master.openshift.local openshift_hostname=master.openshift.local openshift_node_labels=\"{'region': 'infra', 'zone': 'default'}\" openshift_schedulable=true\r\n    node1.openshift.local openshift_hostname=node1.openshift.local openshift_node_labels=\"{'region': 'primary', 'zone': 'east'}\"\r\nEOF\r\n\r\n# Change ownership of file to ec2-user\r\nsudo chown ec2-user:ec2-user /home/ec2-user/inventory.cfg\r\n\r\n# Run the playbook.\r\nANSIBLE_HOST_KEY_CHECKING=False /usr/local/bin/ansible-playbook -i ~/inventory.cfg ~/openshift-ansible/playbooks/byo/config.yml -vvv\r\n\r\n# uncomment for verbose! -vvv\r\n\r\n# If needed, uninstall with the below:\r\n# ansible-playbook playbooks/adhoc/uninstall.yml",
                            "template": "#!/usr/bin/env bash\r\n\r\nset -x\r\nexec \u003e /home/ec2-user/install-openshift.log 2\u003e\u00261\r\n\r\n# Install dev tools and Ansible 2.2\r\nsudo yum install -y \"@Development Tools\" python2-pip openssl-devel python-devel gcc libffi-devel\r\nsudo pip install -Iv ansible==2.4.3.0\r\n\r\n# Clone the openshift-ansible repo, which contains the installer.\r\ngit clone -b release-3.7 https://github.com/openshift/openshift-ansible\r\n\r\n# Set up bastion to SSH to other servers\r\necho \"${private_key}\" \u003e /home/ec2-user/.ssh/private-key.pem\r\nchmod 400 /home/ec2-user/.ssh/private-key.pem\r\n#chown ec2-user:ec2-user /home/ec2-user/.ssh/private-key.pem\r\neval $(ssh-agent)\r\nssh-add /home/ec2-user/.ssh/private-key.pem\r\nssh-keyscan -t rsa -H master.openshift.local \u003e\u003e /home/ec2-user/.ssh/known_hosts\r\nssh-keyscan -t rsa -H node1.openshift.local \u003e\u003e /home/ec2-user/.ssh/known_hosts\r\n\r\n# Create inventory.cfg file\r\n#cat \u003e /home/inventory.cfg \u003c\u003c EOF\r\ncat \u003e /home/ec2-user/inventory.cfg \u003c\u003c EOF\r\n    # Waited: ${wait} seconds before generating from template\r\n    # Create an OSEv3 group that contains the masters and nodes groups\r\n    [OSEv3:children]\r\n    masters\r\n    nodes\r\n    etcd\r\n    # Set variables common for all OSEv3 hosts\r\n    [OSEv3:vars]\r\n    # Enable use of testing repos so that 3.7 will be used\r\n    #openshift_repos_enable_testing=true\r\n    # SSH user, this user should allow ssh based auth without requiring a password\r\n    ansible_ssh_user=ec2-user\r\n    # If ansible_ssh_user is not root, ansible_become must be set to true\r\n    ansible_become=true\r\n    # Deploy OpenShift origin.\r\n    openshift_deployment_type=origin\r\n    # OpenShift Release\r\n    openshift_release=v3.7\r\n    # We need a wildcard DNS setup for our public access to services, fortunately\r\n    # we can use the superb xip.io to get one for free.\r\n    # ${master_ip}\r\n    openshift_public_hostname=${master_ip}.xip.io\r\n    openshift_master_default_subdomain=${master_ip}.xip.io\r\n    # Use an htpasswd file as the indentity provider.\r\n    openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]\r\n    # Uncomment the line below to enable metrics for the cluster.\r\n    # openshift_hosted_metrics_deploy=true\r\n    openshift_enable_service_catalog=false\r\n    template_service_broker_install=false\r\n    #openshift_template_service_broker_namespaces=['openshift']\r\n    #openshift_master_api_port=8443\r\n    #openshift_master_console_port=8443\r\n    # Create the masters host group. Be explicit with the openshift_hostname,\r\n    # otherwise it will resolve to something like ip-10-0-1-98.ec2.internal and use\r\n    # that as the node name.\r\n    [masters]\r\n    master.openshift.local openshift_hostname=master.openshift.local\r\n    # host group for etcd\r\n    [etcd]\r\n    master.openshift.local openshift_hostname=master.openshift.local\r\n    # host group for nodes, includes region info\r\n    [nodes]\r\n    master.openshift.local openshift_hostname=master.openshift.local openshift_node_labels=\"{'region': 'infra', 'zone': 'default'}\" openshift_schedulable=true\r\n    node1.openshift.local openshift_hostname=node1.openshift.local openshift_node_labels=\"{'region': 'primary', 'zone': 'east'}\"\r\nEOF\r\n\r\n# Change ownership of file to ec2-user\r\nsudo chown ec2-user:ec2-user /home/ec2-user/inventory.cfg\r\n\r\n# Run the playbook.\r\nANSIBLE_HOST_KEY_CHECKING=False /usr/local/bin/ansible-playbook -i ~/inventory.cfg ~/openshift-ansible/playbooks/byo/config.yml -vvv\r\n\r\n# uncomment for verbose! -vvv\r\n\r\n# If needed, uninstall with the below:\r\n# ansible-playbook playbooks/adhoc/uninstall.yml",
                            "vars.%": "3",
                            "vars.master_ip": "52.66.203.164",
                            "vars.private_key": "./openshift",
                            "vars.wait": "60"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.setup-master": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "227a463e50dd5f7c37784ce7447a8afbbbfb3291a90b6de685bfd9559fa23fd8",
                        "attributes": {
                            "id": "227a463e50dd5f7c37784ce7447a8afbbbfb3291a90b6de685bfd9559fa23fd8",
                            "rendered": "#!/usr/bin/env bash\n\n# This script template is expected to be populated during the setup of a\n# OpenShift  node. It runs on host startup.\n\n# Log everything we do.\nset -x\nexec \u003e /var/log/user-data.log 2\u003e\u00261\n\n# Create initial logs config.\ncat \u003e ./awslogs.conf \u003c\u003c EOF\n[general]\nstate_file = /var/awslogs/state/agent-state\n\n[/var/log/messages]\nlog_stream_name = openshift-master-{instance_id}\nlog_group_name = /var/log/messages\nfile = /var/log/messages\ndatetime_format = %b %d %H:%M:%S\nbuffer_duration = 5000\ninitial_position = start_of_file\n\n[/var/log/user-data.log]\nlog_stream_name = openshift-master-{instance_id}\nlog_group_name = /var/log/user-data.log\nfile = /var/log/user-data.log\nEOF\n\n# Download and run the AWS logs agent.\ncurl https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py -O\npython ./awslogs-agent-setup.py --non-interactive --region ap-south-1 -c ./awslogs.conf\n\n# Start the awslogs service, also start on reboot.\n# Note: Errors go to /var/log/awslogs.log\nservice awslogs start\nchkconfig awslogs on\n\n# OpenShift setup\n# See: https://docs.openshift.org/latest/install_config/install/host_preparation.html\n\n# Install packages required to setup OpenShift.\nyum install -y wget git net-tools bind-utils iptables-services bridge-utils bash-completion httpd-tools\nyum update -y\n# Noticed that RHEL was being upgraded to 7.5\n# Following could be used to stop that.\n# yum -exclude=kernel* update -y\n\n# Note: The step below is not in the official docs, I needed it to install\n# Docker. If anyone finds out why, I'd love to know.\n# See: https://forums.aws.amazon.com/thread.jspa?messageID=574126\nyum-config-manager --enable rhui-REGION-rhel-server-extras\n\n# Docker setup. Check the version with `docker version`, should be 1.12.\nyum install -y docker\n\n# Configure the Docker storage back end to prepare and use our EBS block device.\n# https://docs.openshift.org/latest/install_config/install/host_preparation.html#configuring-docker-storage\n# Why xvdf? See:\n# http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-using-volumes.html\ncat \u003c\u003cEOF \u003e /etc/sysconfig/docker-storage-setup\nDEVS=/dev/xvdf\nVG=docker-vg\nEOF\ndocker-storage-setup\n\n# Restart docker and go to clean state as required by docker-storage-setup.\nsystemctl stop docker\n#systemd stop docker\nrm -rf /var/lib/docker/*\nsystemctl restart docker\n#systemd restart docker\n\n# Allow the ec2-user to sudo without a tty, which is required when we run post\n# install scripts on the server.\necho Defaults:ec2-user \\!requiretty \u003e\u003e /etc/sudoers\n",
                            "template": "#!/usr/bin/env bash\n\n# This script template is expected to be populated during the setup of a\n# OpenShift  node. It runs on host startup.\n\n# Log everything we do.\nset -x\nexec \u003e /var/log/user-data.log 2\u003e\u00261\n\n# Create initial logs config.\ncat \u003e ./awslogs.conf \u003c\u003c EOF\n[general]\nstate_file = /var/awslogs/state/agent-state\n\n[/var/log/messages]\nlog_stream_name = openshift-master-{instance_id}\nlog_group_name = /var/log/messages\nfile = /var/log/messages\ndatetime_format = %b %d %H:%M:%S\nbuffer_duration = 5000\ninitial_position = start_of_file\n\n[/var/log/user-data.log]\nlog_stream_name = openshift-master-{instance_id}\nlog_group_name = /var/log/user-data.log\nfile = /var/log/user-data.log\nEOF\n\n# Download and run the AWS logs agent.\ncurl https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py -O\npython ./awslogs-agent-setup.py --non-interactive --region ap-south-1 -c ./awslogs.conf\n\n# Start the awslogs service, also start on reboot.\n# Note: Errors go to /var/log/awslogs.log\nservice awslogs start\nchkconfig awslogs on\n\n# OpenShift setup\n# See: https://docs.openshift.org/latest/install_config/install/host_preparation.html\n\n# Install packages required to setup OpenShift.\nyum install -y wget git net-tools bind-utils iptables-services bridge-utils bash-completion httpd-tools\nyum update -y\n# Noticed that RHEL was being upgraded to 7.5\n# Following could be used to stop that.\n# yum -exclude=kernel* update -y\n\n# Note: The step below is not in the official docs, I needed it to install\n# Docker. If anyone finds out why, I'd love to know.\n# See: https://forums.aws.amazon.com/thread.jspa?messageID=574126\nyum-config-manager --enable rhui-REGION-rhel-server-extras\n\n# Docker setup. Check the version with `docker version`, should be 1.12.\nyum install -y docker\n\n# Configure the Docker storage back end to prepare and use our EBS block device.\n# https://docs.openshift.org/latest/install_config/install/host_preparation.html#configuring-docker-storage\n# Why xvdf? See:\n# http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-using-volumes.html\ncat \u003c\u003cEOF \u003e /etc/sysconfig/docker-storage-setup\nDEVS=/dev/xvdf\nVG=docker-vg\nEOF\ndocker-storage-setup\n\n# Restart docker and go to clean state as required by docker-storage-setup.\nsystemctl stop docker\n#systemd stop docker\nrm -rf /var/lib/docker/*\nsystemctl restart docker\n#systemd restart docker\n\n# Allow the ec2-user to sudo without a tty, which is required when we run post\n# install scripts on the server.\necho Defaults:ec2-user \\!requiretty \u003e\u003e /etc/sudoers\n"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.setup-node": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "a38627a47240368abf97cfdbaca808aa1c70463a52b75c81b1fb72e0c3d25efe",
                        "attributes": {
                            "id": "a38627a47240368abf97cfdbaca808aa1c70463a52b75c81b1fb72e0c3d25efe",
                            "rendered": "#!/usr/bin/env bash\n\n# This script template is expected to be populated during the setup of a\n# OpenShift  node. It runs on host startup.\n\n# Log everything we do.\nset -x\nexec \u003e /var/log/user-data.log 2\u003e\u00261\n\n# Create initial logs config.\ncat \u003e ./awslogs.conf \u003c\u003c- EOF\n[general]\nstate_file = /var/awslogs/state/agent-state\n\n[/var/log/messages]\nlog_stream_name = openshift-node-{instance_id}\nlog_group_name = /var/log/messages\nfile = /var/log/messages\ndatetime_format = %b %d %H:%M:%S\nbuffer_duration = 5000\ninitial_position = start_of_file\n\n[/var/log/user-data.log]\nlog_stream_name = openshift-node-{instance_id}\nlog_group_name = /var/log/user-data.log\nfile = /var/log/user-data.log\nEOF\n\n# Download and run the AWS logs agent.\ncurl https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py -O\npython ./awslogs-agent-setup.py --non-interactive --region ap-south-1 -c ./awslogs.conf\n\n# Start the awslogs service, also start on reboot.\n# Note: Errors go to /var/log/awslogs.log\nservice awslogs start\nchkconfig awslogs on\n\n# OpenShift setup\n# See: https://docs.openshift.org/latest/install_config/install/host_preparation.html\n\n# Install packages required to setup OpenShift.\nyum install -y wget git net-tools bind-utils iptables-services bridge-utils bash-completion\nyum update -y\n# Noticed that RHEL was being upgraded to 7.5\n# Following could be used to stop that.\n# yum -exclude=kernel* update -y\n\n# Note: The step below is not in the official docs, I needed it to install\n# Docker. If anyone finds out why, I'd love to know.\n# See: https://forums.aws.amazon.com/thread.jspa?messageID=574126\nyum-config-manager --enable rhui-REGION-rhel-server-extras\n\n# Docker setup. Check the version with `docker version`, should be 1.12.\nyum install -y docker\n\n# Configure the Docker storage back end to prepare and use our EBS block device.\n# https://docs.openshift.org/latest/install_config/install/host_preparation.html#configuring-docker-storage\n# Why xvdf? See:\n# http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-using-volumes.html\ncat \u003c\u003cEOF \u003e /etc/sysconfig/docker-storage-setup\nDEVS=/dev/xvdf\nVG=docker-vg\nEOF\ndocker-storage-setup\n\n# Restart docker and go to clean state as required by docker-storage-setup.\nsystemctl stop docker\n# systemd stop docker\nrm -rf /var/lib/docker/*\nsystemctl restart docker\n#systemd restart docker\n\n# Allow the ec2-user to sudo without a tty, which is required when we run post\n# install scripts on the server.\necho Defaults:ec2-user \\!requiretty \u003e\u003e /etc/sudoers\n",
                            "template": "#!/usr/bin/env bash\n\n# This script template is expected to be populated during the setup of a\n# OpenShift  node. It runs on host startup.\n\n# Log everything we do.\nset -x\nexec \u003e /var/log/user-data.log 2\u003e\u00261\n\n# Create initial logs config.\ncat \u003e ./awslogs.conf \u003c\u003c- EOF\n[general]\nstate_file = /var/awslogs/state/agent-state\n\n[/var/log/messages]\nlog_stream_name = openshift-node-{instance_id}\nlog_group_name = /var/log/messages\nfile = /var/log/messages\ndatetime_format = %b %d %H:%M:%S\nbuffer_duration = 5000\ninitial_position = start_of_file\n\n[/var/log/user-data.log]\nlog_stream_name = openshift-node-{instance_id}\nlog_group_name = /var/log/user-data.log\nfile = /var/log/user-data.log\nEOF\n\n# Download and run the AWS logs agent.\ncurl https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py -O\npython ./awslogs-agent-setup.py --non-interactive --region ap-south-1 -c ./awslogs.conf\n\n# Start the awslogs service, also start on reboot.\n# Note: Errors go to /var/log/awslogs.log\nservice awslogs start\nchkconfig awslogs on\n\n# OpenShift setup\n# See: https://docs.openshift.org/latest/install_config/install/host_preparation.html\n\n# Install packages required to setup OpenShift.\nyum install -y wget git net-tools bind-utils iptables-services bridge-utils bash-completion\nyum update -y\n# Noticed that RHEL was being upgraded to 7.5\n# Following could be used to stop that.\n# yum -exclude=kernel* update -y\n\n# Note: The step below is not in the official docs, I needed it to install\n# Docker. If anyone finds out why, I'd love to know.\n# See: https://forums.aws.amazon.com/thread.jspa?messageID=574126\nyum-config-manager --enable rhui-REGION-rhel-server-extras\n\n# Docker setup. Check the version with `docker version`, should be 1.12.\nyum install -y docker\n\n# Configure the Docker storage back end to prepare and use our EBS block device.\n# https://docs.openshift.org/latest/install_config/install/host_preparation.html#configuring-docker-storage\n# Why xvdf? See:\n# http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-using-volumes.html\ncat \u003c\u003cEOF \u003e /etc/sysconfig/docker-storage-setup\nDEVS=/dev/xvdf\nVG=docker-vg\nEOF\ndocker-storage-setup\n\n# Restart docker and go to clean state as required by docker-storage-setup.\nsystemctl stop docker\n# systemd stop docker\nrm -rf /var/lib/docker/*\nsystemctl restart docker\n#systemd restart docker\n\n# Allow the ec2-user to sudo without a tty, which is required when we run post\n# install scripts on the server.\necho Defaults:ec2-user \\!requiretty \u003e\u003e /etc/sudoers\n"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "local_file.inventory": {
                    "type": "local_file",
                    "depends_on": [
                        "data.template_file.inventory"
                    ],
                    "primary": {
                        "id": "090a1ff2dc6d689e04c210f30390e887917e7946",
                        "attributes": {
                            "content": "#!/usr/bin/env bash\r\n\r\nset -x\r\nexec \u003e /home/ec2-user/install-openshift.log 2\u003e\u00261\r\n\r\n# Install dev tools and Ansible 2.2\r\nsudo yum install -y \"@Development Tools\" python2-pip openssl-devel python-devel gcc libffi-devel\r\nsudo pip install -Iv ansible==2.4.3.0\r\n\r\n# Clone the openshift-ansible repo, which contains the installer.\r\ngit clone -b release-3.7 https://github.com/openshift/openshift-ansible\r\n\r\n# Set up bastion to SSH to other servers\r\necho \"./openshift\" \u003e /home/ec2-user/.ssh/private-key.pem\r\nchmod 400 /home/ec2-user/.ssh/private-key.pem\r\n#chown ec2-user:ec2-user /home/ec2-user/.ssh/private-key.pem\r\neval $(ssh-agent)\r\nssh-add /home/ec2-user/.ssh/private-key.pem\r\nssh-keyscan -t rsa -H master.openshift.local \u003e\u003e /home/ec2-user/.ssh/known_hosts\r\nssh-keyscan -t rsa -H node1.openshift.local \u003e\u003e /home/ec2-user/.ssh/known_hosts\r\n\r\n# Create inventory.cfg file\r\n#cat \u003e /home/inventory.cfg \u003c\u003c EOF\r\ncat \u003e /home/ec2-user/inventory.cfg \u003c\u003c EOF\r\n    # Waited: 60 seconds before generating from template\r\n    # Create an OSEv3 group that contains the masters and nodes groups\r\n    [OSEv3:children]\r\n    masters\r\n    nodes\r\n    etcd\r\n    # Set variables common for all OSEv3 hosts\r\n    [OSEv3:vars]\r\n    # Enable use of testing repos so that 3.7 will be used\r\n    #openshift_repos_enable_testing=true\r\n    # SSH user, this user should allow ssh based auth without requiring a password\r\n    ansible_ssh_user=ec2-user\r\n    # If ansible_ssh_user is not root, ansible_become must be set to true\r\n    ansible_become=true\r\n    # Deploy OpenShift origin.\r\n    openshift_deployment_type=origin\r\n    # OpenShift Release\r\n    openshift_release=v3.7\r\n    # We need a wildcard DNS setup for our public access to services, fortunately\r\n    # we can use the superb xip.io to get one for free.\r\n    # 52.66.203.164\r\n    openshift_public_hostname=52.66.203.164.xip.io\r\n    openshift_master_default_subdomain=52.66.203.164.xip.io\r\n    # Use an htpasswd file as the indentity provider.\r\n    openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]\r\n    # Uncomment the line below to enable metrics for the cluster.\r\n    # openshift_hosted_metrics_deploy=true\r\n    openshift_enable_service_catalog=false\r\n    template_service_broker_install=false\r\n    #openshift_template_service_broker_namespaces=['openshift']\r\n    #openshift_master_api_port=8443\r\n    #openshift_master_console_port=8443\r\n    # Create the masters host group. Be explicit with the openshift_hostname,\r\n    # otherwise it will resolve to something like ip-10-0-1-98.ec2.internal and use\r\n    # that as the node name.\r\n    [masters]\r\n    master.openshift.local openshift_hostname=master.openshift.local\r\n    # host group for etcd\r\n    [etcd]\r\n    master.openshift.local openshift_hostname=master.openshift.local\r\n    # host group for nodes, includes region info\r\n    [nodes]\r\n    master.openshift.local openshift_hostname=master.openshift.local openshift_node_labels=\"{'region': 'infra', 'zone': 'default'}\" openshift_schedulable=true\r\n    node1.openshift.local openshift_hostname=node1.openshift.local openshift_node_labels=\"{'region': 'primary', 'zone': 'east'}\"\r\nEOF\r\n\r\n# Change ownership of file to ec2-user\r\nsudo chown ec2-user:ec2-user /home/ec2-user/inventory.cfg\r\n\r\n# Run the playbook.\r\nANSIBLE_HOST_KEY_CHECKING=False /usr/local/bin/ansible-playbook -i ~/inventory.cfg ~/openshift-ansible/playbooks/byo/config.yml -vvv\r\n\r\n# uncomment for verbose! -vvv\r\n\r\n# If needed, uninstall with the below:\r\n# ansible-playbook playbooks/adhoc/uninstall.yml",
                            "filename": "./install-openshift.sh",
                            "id": "090a1ff2dc6d689e04c210f30390e887917e7946"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local"
                }
            },
            "depends_on": []
        }
    ]
}
